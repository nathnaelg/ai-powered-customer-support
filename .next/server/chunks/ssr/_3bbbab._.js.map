{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from 'clsx'\nimport { customAlphabet } from 'nanoid'\nimport { twMerge } from 'tailwind-merge'\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport const nanoid = customAlphabet(\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz',\n  7\n) // 7-character random string\n\nexport async function fetcher<JSON = any>(\n  input: RequestInfo,\n  init?: RequestInit\n): Promise<JSON> {\n  const res = await fetch(input, init)\n\n  if (!res.ok) {\n    const json = await res.json()\n    if (json.error) {\n      const error = new Error(json.error) as Error & {\n        status: number\n      }\n      error.status = res.status\n      throw error\n    } else {\n      throw new Error('An unexpected error occurred')\n    }\n  }\n\n  return res.json()\n}\n\nexport function formatDate(input: string | number | Date): string {\n  const date = new Date(input)\n  return date.toLocaleDateString('en-US', {\n    month: 'long',\n    day: 'numeric',\n    year: 'numeric'\n  })\n}\n\nexport const formatNumber = (value: number) =>\n  new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(value)\n\nexport const runAsyncFnWithoutBlocking = (\n  fn: (...args: any) => Promise<any>\n) => {\n  fn()\n}\n\nexport const sleep = (ms: number) =>\n  new Promise(resolve => setTimeout(resolve, ms))\n\nexport const getStringFromBuffer = (buffer: ArrayBuffer) =>\n  Array.from(new Uint8Array(buffer))\n    .map(b => b.toString(16).padStart(2, '0'))\n    .join('')\n\nexport enum ResultCode {\n  InvalidCredentials = 'INVALID_CREDENTIALS',\n  InvalidSubmission = 'INVALID_SUBMISSION',\n  UserAlreadyExists = 'USER_ALREADY_EXISTS',\n  UnknownError = 'UNKNOWN_ERROR',\n  UserCreated = 'USER_CREATED',\n  UserLoggedIn = 'USER_LOGGED_IN'\n}\n\nexport const getMessageFromCode = (resultCode: string) => {\n  switch (resultCode) {\n    case ResultCode.InvalidCredentials:\n      return 'Invalid credentials!'\n    case ResultCode.InvalidSubmission:\n      return 'Invalid submission, please try again!'\n    case ResultCode.UserAlreadyExists:\n      return 'User already exists, please log in!'\n    case ResultCode.UserCreated:\n      return 'User created, welcome!'\n    case ResultCode.UnknownError:\n      return 'Something went wrong, please try again!'\n    case ResultCode.UserLoggedIn:\n      return 'Logged in!'\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAIO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEO,MAAM,SAAS,CAAA,GAAA,kMAAA,CAAA,iBAAc,AAAD,EACjC,kEACA,GACA,4BAA4B;;AAEvB,eAAe,QACpB,KAAkB,EAClB,IAAkB;IAElB,MAAM,MAAM,MAAM,MAAM,OAAO;IAE/B,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,IAAI,KAAK,KAAK,EAAE;YACd,MAAM,QAAQ,IAAI,MAAM,KAAK,KAAK;YAGlC,MAAM,MAAM,GAAG,IAAI,MAAM;YACzB,MAAM;QACR,OAAO;YACL,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,OAAO,IAAI,IAAI;AACjB;AAEO,SAAS,WAAW,KAA6B;IACtD,MAAM,OAAO,IAAI,KAAK;IACtB,OAAO,KAAK,kBAAkB,CAAC,SAAS;QACtC,OAAO;QACP,KAAK;QACL,MAAM;IACR;AACF;AAEO,MAAM,eAAe,CAAC,QAC3B,IAAI,KAAK,YAAY,CAAC,SAAS;QAC7B,OAAO;QACP,UAAU;IACZ,GAAG,MAAM,CAAC;AAEL,MAAM,4BAA4B,CACvC;IAEA;AACF;AAEO,MAAM,QAAQ,CAAC,KACpB,IAAI,QAAQ,CAAA,UAAW,WAAW,SAAS;AAEtC,MAAM,sBAAsB,CAAC,SAClC,MAAM,IAAI,CAAC,IAAI,WAAW,SACvB,GAAG,CAAC,CAAA,IAAK,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG,MACpC,IAAI,CAAC;;UAEE;;;;;;;GAAA,eAAA;AASL,MAAM,qBAAqB,CAAC;IACjC,OAAQ;QACN;YACE,OAAO;QACT;YACE,OAAO;QACT;YACE,OAAO;QACT;YACE,OAAO;QACT;YACE,OAAO;QACT;YACE,OAAO;IACX;AACF"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/tailwind-indicator.tsx"],"sourcesContent":["export function TailwindIndicator() {\n  if (process.env.NODE_ENV === 'production') return null\n\n  return (\n    <div className=\"fixed bottom-1 left-1 z-50 flex size-6 items-center justify-center rounded-full bg-gray-800 p-3 font-mono text-xs text-white\">\n      <div className=\"block sm:hidden\">xs</div>\n      <div className=\"hidden sm:block md:hidden\">sm</div>\n      <div className=\"hidden md:block lg:hidden\">md</div>\n      <div className=\"hidden lg:block xl:hidden\">lg</div>\n      <div className=\"hidden xl:block 2xl:hidden\">xl</div>\n      <div className=\"hidden 2xl:block\">2xl</div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAAO,SAAS;IACd,IAAI,oDAAyB,cAAc,OAAO;IAElD,qBACE,6VAAC;QAAI,WAAU;;0BACb,6VAAC;gBAAI,WAAU;0BAAkB;;;;;;0BACjC,6VAAC;gBAAI,WAAU;0BAA4B;;;;;;0BAC3C,6VAAC;gBAAI,WAAU;0BAA4B;;;;;;0BAC3C,6VAAC;gBAAI,WAAU;0BAA4B;;;;;;0BAC3C,6VAAC;gBAAI,WAAU;0BAA6B;;;;;;0BAC5C,6VAAC;gBAAI,WAAU;0BAAmB;;;;;;;;;;;;AAGxC"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/providers.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sCACA"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/auth.config.ts"],"sourcesContent":["import type { NextAuthConfig } from 'next-auth'\n\nexport const authConfig = {\n  secret: process.env.AUTH_SECRET,\n  pages: {\n    signIn: '/login',\n    newUser: '/signup'\n  },\n  callbacks: {\n    async authorized({ auth, request: { nextUrl } }) {\n      const isLoggedIn = !!auth?.user\n      const isOnLoginPage = nextUrl.pathname.startsWith('/login')\n      const isOnSignupPage = nextUrl.pathname.startsWith('/signup')\n\n      if (isLoggedIn) {\n        if (isOnLoginPage || isOnSignupPage) {\n          return Response.redirect(new URL('/', nextUrl))\n        }\n      }\n\n      return true\n    },\n    async jwt({ token, user }) {\n      if (user) {\n        token = { ...token, id: user.id }\n      }\n\n      return token\n    },\n    async session({ session, token }) {\n      if (token) {\n        const { id } = token as { id: string }\n        const { user } = session\n\n        session = { ...session, user: { ...user, id } }\n      }\n\n      return session\n    }\n  },\n  providers: []\n} satisfies NextAuthConfig\n"],"names":[],"mappings":";;;AAEO,MAAM,aAAa;IACxB,QAAQ,QAAQ,GAAG,CAAC,WAAW;IAC/B,OAAO;QACL,QAAQ;QACR,SAAS;IACX;IACA,WAAW;QACT,MAAM,YAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YAC7C,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,gBAAgB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAClD,MAAM,iBAAiB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAEnD,IAAI,YAAY;gBACd,IAAI,iBAAiB,gBAAgB;oBACnC,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,KAAK;gBACxC;YACF;YAEA,OAAO;QACT;QACA,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,IAAI,MAAM;gBACR,QAAQ;oBAAE,GAAG,KAAK;oBAAE,IAAI,KAAK,EAAE;gBAAC;YAClC;YAEA,OAAO;QACT;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO;gBACT,MAAM,EAAE,EAAE,EAAE,GAAG;gBACf,MAAM,EAAE,IAAI,EAAE,GAAG;gBAEjB,UAAU;oBAAE,GAAG,OAAO;oBAAE,MAAM;wBAAE,GAAG,IAAI;wBAAE;oBAAG;gBAAE;YAChD;YAEA,OAAO;QACT;IACF;IACA,WAAW,EAAE;AACf"}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 237, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/login/actions.ts"],"sourcesContent":["'use server'\n\nimport { signIn } from '@/auth'\nimport { User } from '@/lib/types'\nimport { AuthError } from 'next-auth'\nimport { z } from 'zod'\nimport { kv } from '@vercel/kv'\nimport { ResultCode } from '@/lib/utils'\n\nexport async function getUser(email: string) {\n  const user = await kv.hgetall<User>(`user:${email}`)\n  return user\n}\n\ninterface Result {\n  type: string\n  resultCode: ResultCode\n}\n\nexport async function authenticate(\n  _prevState: Result | undefined,\n  formData: FormData\n): Promise<Result | undefined> {\n  try {\n    const email = formData.get('email')\n    const password = formData.get('password')\n\n    const parsedCredentials = z\n      .object({\n        email: z.string().email(),\n        password: z.string().min(6)\n      })\n      .safeParse({\n        email,\n        password\n      })\n\n    if (parsedCredentials.success) {\n      await signIn('credentials', {\n        email,\n        password,\n        redirect: false\n      })\n\n      return {\n        type: 'success',\n        resultCode: ResultCode.UserLoggedIn\n      }\n    } else {\n      return {\n        type: 'error',\n        resultCode: ResultCode.InvalidCredentials\n      }\n    }\n  } catch (error) {\n    if (error instanceof AuthError) {\n      switch (error.type) {\n        case 'CredentialsSignin':\n          return {\n            type: 'error',\n            resultCode: ResultCode.InvalidCredentials\n          }\n        default:\n          return {\n            type: 'error',\n            resultCode: ResultCode.UnknownError\n          }\n      }\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AASO,eAAe,QAAQ,KAAa;IACzC,MAAM,OAAO,MAAM,0MAAA,CAAA,KAAE,CAAC,OAAO,CAAO,CAAC,KAAK,EAAE,MAAM,CAAC;IACnD,OAAO;AACT;AAOO,eAAe,aACpB,UAA8B,EAC9B,QAAkB;IAElB,IAAI;QACF,MAAM,QAAQ,SAAS,GAAG,CAAC;QAC3B,MAAM,WAAW,SAAS,GAAG,CAAC;QAE9B,MAAM,oBAAoB,qLAAA,CAAA,IAAC,CACxB,MAAM,CAAC;YACN,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;YACvB,UAAU,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;QAC3B,GACC,SAAS,CAAC;YACT;YACA;QACF;QAEF,IAAI,kBAAkB,OAAO,EAAE;YAC7B,MAAM,CAAA,GAAA,oGAAA,CAAA,SAAM,AAAD,EAAE,eAAe;gBAC1B;gBACA;gBACA,UAAU;YACZ;YAEA,OAAO;gBACL,MAAM;gBACN,YAAY,4GAAA,CAAA,aAAU,CAAC,YAAY;YACrC;QACF,OAAO;YACL,OAAO;gBACL,MAAM;gBACN,YAAY,4GAAA,CAAA,aAAU,CAAC,kBAAkB;YAC3C;QACF;IACF,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,oMAAA,CAAA,YAAS,EAAE;YAC9B,OAAQ,MAAM,IAAI;gBAChB,KAAK;oBACH,OAAO;wBACL,MAAM;wBACN,YAAY,4GAAA,CAAA,aAAU,CAAC,kBAAkB;oBAC3C;gBACF;oBACE,OAAO;wBACL,MAAM;wBACN,YAAY,4GAAA,CAAA,aAAU,CAAC,YAAY;oBACrC;YACJ;QACF;IACF;AACF"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/auth.ts"],"sourcesContent":["import NextAuth from 'next-auth'\nimport Credentials from 'next-auth/providers/credentials'\nimport { authConfig } from './auth.config'\nimport { z } from 'zod'\nimport { getStringFromBuffer } from './lib/utils'\nimport { getUser } from './app/login/actions'\n\nexport const { auth, signIn, signOut } = NextAuth({\n  ...authConfig,\n  providers: [\n    Credentials({\n      async authorize(credentials) {\n        const parsedCredentials = z\n          .object({\n            email: z.string().email(),\n            password: z.string().min(6)\n          })\n          .safeParse(credentials)\n\n        if (parsedCredentials.success) {\n          const { email, password } = parsedCredentials.data\n          const user = await getUser(email)\n\n          if (!user) return null\n\n          const encoder = new TextEncoder()\n          const saltedPassword = encoder.encode(password + user.salt)\n          const hashedPasswordBuffer = await crypto.subtle.digest(\n            'SHA-256',\n            saltedPassword\n          )\n          const hashedPassword = getStringFromBuffer(hashedPasswordBuffer)\n\n          if (hashedPassword === user.password) {\n            return user\n          } else {\n            return null\n          }\n        }\n\n        return null\n      }\n    })\n  ]\n})\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAOO,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,sQAAA,CAAA,UAAQ,AAAD,EAAE;IAChD,GAAG,8GAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,sNAAA,CAAA,UAAW,AAAD,EAAE;YACV,MAAM,WAAU,WAAW;gBACzB,MAAM,oBAAoB,qLAAA,CAAA,IAAC,CACxB,MAAM,CAAC;oBACN,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;oBACvB,UAAU,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;gBAC3B,GACC,SAAS,CAAC;gBAEb,IAAI,kBAAkB,OAAO,EAAE;oBAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,kBAAkB,IAAI;oBAClD,MAAM,OAAO,MAAM,CAAA,GAAA,uHAAA,CAAA,UAAO,AAAD,EAAE;oBAE3B,IAAI,CAAC,MAAM,OAAO;oBAElB,MAAM,UAAU,IAAI;oBACpB,MAAM,iBAAiB,QAAQ,MAAM,CAAC,WAAW,KAAK,IAAI;oBAC1D,MAAM,uBAAuB,MAAM,OAAO,MAAM,CAAC,MAAM,CACrD,WACA;oBAEF,MAAM,iBAAiB,CAAA,GAAA,4GAAA,CAAA,sBAAmB,AAAD,EAAE;oBAE3C,IAAI,mBAAmB,KAAK,QAAQ,EAAE;wBACpC,OAAO;oBACT,OAAO;wBACL,OAAO;oBACT;gBACF;gBAEA,OAAO;YACT;QACF;KACD;AACH"}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/button.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50',\n  {\n    variants: {\n      variant: {\n        default:\n          'bg-primary text-primary-foreground shadow hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline'\n      },\n      size: {\n        default: 'h-9 px-4 py-2',\n        sm: 'h-8 rounded-md px-3 text-xs',\n        lg: 'h-10 rounded-md px-8',\n        icon: 'size-9'\n      }\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default'\n    }\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAMA,MAAM,iBAAiB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACvB,uOACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,qTAAM,UAAU,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,oSAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6VAAC;QACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/icons.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const IconArrowDown = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconArrowDown() from the server but IconArrowDown is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconArrowDown\",\n);\nexport const IconArrowElbow = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconArrowElbow() from the server but IconArrowElbow is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconArrowElbow\",\n);\nexport const IconArrowRight = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconArrowRight() from the server but IconArrowRight is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconArrowRight\",\n);\nexport const IconCheck = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconCheck() from the server but IconCheck is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconCheck\",\n);\nexport const IconChevronUpDown = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconChevronUpDown() from the server but IconChevronUpDown is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconChevronUpDown\",\n);\nexport const IconClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconClose() from the server but IconClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconClose\",\n);\nexport const IconCopy = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconCopy() from the server but IconCopy is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconCopy\",\n);\nexport const IconDownload = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconDownload() from the server but IconDownload is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconDownload\",\n);\nexport const IconEdit = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconEdit() from the server but IconEdit is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconEdit\",\n);\nexport const IconExternalLink = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconExternalLink() from the server but IconExternalLink is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconExternalLink\",\n);\nexport const IconGitHub = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconGitHub() from the server but IconGitHub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconGitHub\",\n);\nexport const IconMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconMessage() from the server but IconMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconMessage\",\n);\nexport const IconMoon = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconMoon() from the server but IconMoon is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconMoon\",\n);\nexport const IconNextChat = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconNextChat() from the server but IconNextChat is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconNextChat\",\n);\nexport const IconOpenAI = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconOpenAI() from the server but IconOpenAI is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconOpenAI\",\n);\nexport const IconPlus = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconPlus() from the server but IconPlus is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconPlus\",\n);\nexport const IconRefresh = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconRefresh() from the server but IconRefresh is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconRefresh\",\n);\nexport const IconSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconSeparator() from the server but IconSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconSeparator\",\n);\nexport const IconShare = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconShare() from the server but IconShare is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconShare\",\n);\nexport const IconSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconSidebar() from the server but IconSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconSidebar\",\n);\nexport const IconSpinner = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconSpinner() from the server but IconSpinner is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconSpinner\",\n);\nexport const IconStop = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconStop() from the server but IconStop is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconStop\",\n);\nexport const IconSun = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconSun() from the server but IconSun is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconSun\",\n);\nexport const IconTrash = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconTrash() from the server but IconTrash is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconTrash\",\n);\nexport const IconUser = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconUser() from the server but IconUser is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconUser\",\n);\nexport const IconUsers = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconUsers() from the server but IconUsers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconUsers\",\n);\nexport const IconVercel = registerClientReference(\n    function() { throw new Error(\"Attempted to call IconVercel() from the server but IconVercel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/icons.tsx\",\n    \"IconVercel\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACO,MAAM,gBAAgB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qCACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qCACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA;AAEG,MAAM,eAAe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qCACA;AAEG,MAAM,aAAa,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,qCACA;AAEG,MAAM,cAAc,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA;AAEG,MAAM,eAAe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,qCACA;AAEG,MAAM,aAAa,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA;AAEG,MAAM,cAAc,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qCACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,cAAc,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qCACA;AAEG,MAAM,cAAc,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA;AAEG,MAAM,UAAU,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,WAAW,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qCACA;AAEG,MAAM,YAAY,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,qCACA;AAEG,MAAM,aAAa,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,qCACA"}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 559, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/dropdown-menu.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AACO,MAAM,eAAe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6CACA;AAEG,MAAM,2BAA2B,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,6CACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6CACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6CACA;AAEG,MAAM,mBAAmB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6CACA;AAEG,MAAM,oBAAoB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6CACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6CACA;AAEG,MAAM,wBAAwB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACvD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6CACA;AAEG,MAAM,uBAAuB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACtD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,6CACA;AAEG,MAAM,kBAAkB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,6CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,yBAAyB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACxD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,sBAAsB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6CACA"}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 629, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 634, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 639, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/user-menu.tsx"],"sourcesContent":["import { type Session } from '@/lib/types'\n\nimport { Button } from '@/components/ui/button'\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger\n} from '@/components/ui/dropdown-menu'\nimport { signOut } from '@/auth'\n\nexport interface UserMenuProps {\n  user: Session['user']\n}\n\nfunction getUserInitials(name: string) {\n  const [firstName, lastName] = name.split(' ')\n  return lastName ? `${firstName[0]}${lastName[0]}` : firstName.slice(0, 2)\n}\n\nexport function UserMenu({ user }: UserMenuProps) {\n  return (\n    <div className=\"flex items-center justify-between\">\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"ghost\" className=\"pl-0\">\n            <div className=\"flex size-7 shrink-0 select-none items-center justify-center rounded-full bg-muted/50 text-xs font-medium uppercase text-muted-foreground\">\n              {getUserInitials(user.email)}\n            </div>\n            <span className=\"ml-2 hidden md:block\">{user.email}</span>\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent sideOffset={8} align=\"start\" className=\"w-fit\">\n          <DropdownMenuItem className=\"flex-col items-start\">\n            <div className=\"text-xs text-zinc-500\">{user.email}</div>\n          </DropdownMenuItem>\n          <DropdownMenuSeparator />\n          <form\n            action={async () => {\n              'use server'\n              await signOut()\n            }}\n          >\n            <button className=\" relative flex w-full cursor-pointer select-none items-center rounded-sm px-2 py-1.5 text-xs outline-none transition-colors hover:bg-red-500 hover:text-white focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\">\n              Sign Out\n            </button>\n          </form>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAgBA,SAAS,gBAAgB,IAAY;IACnC,MAAM,CAAC,WAAW,SAAS,GAAG,KAAK,KAAK,CAAC;IACzC,OAAO,WAAW,CAAC,EAAE,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,UAAU,KAAK,CAAC,GAAG;AACzE;AAEO,SAAS,SAAS,EAAE,IAAI,EAAiB;IAC9C,qBACE,6VAAC;QAAI,WAAU;kBACb,cAAA,6VAAC,qIAAA,CAAA,eAAY;;8BACX,6VAAC,qIAAA,CAAA,sBAAmB;oBAAC,OAAO;8BAC1B,cAAA,6VAAC,2HAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,WAAU;;0CAChC,6VAAC;gCAAI,WAAU;0CACZ,gBAAgB,KAAK,KAAK;;;;;;0CAE7B,6VAAC;gCAAK,WAAU;0CAAwB,KAAK,KAAK;;;;;;;;;;;;;;;;;8BAGtD,6VAAC,qIAAA,CAAA,sBAAmB;oBAAC,YAAY;oBAAG,OAAM;oBAAQ,WAAU;;sCAC1D,6VAAC,qIAAA,CAAA,mBAAgB;4BAAC,WAAU;sCAC1B,cAAA,6VAAC;gCAAI,WAAU;0CAAyB,KAAK,KAAK;;;;;;;;;;;sCAEpD,6VAAC,qIAAA,CAAA,wBAAqB;;;;;sCACtB,6VAAC;4BACC,MAAM;sCAKN,cAAA,6VAAC;gCAAO,WAAU;0CAA4Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ1S;;IAXc,MAAM,CAAA,GAAA,oGAAA,CAAA,UAAO,AAAD;AACd"}},
    {"offset": {"line": 759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 764, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/sidebar-mobile.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SidebarMobile = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMobile() from the server but SidebarMobile is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/sidebar-mobile.tsx\",\n    \"SidebarMobile\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2CACA"}},
    {"offset": {"line": 773, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/sidebar-toggle.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SidebarToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarToggle() from the server but SidebarToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/sidebar-toggle.tsx\",\n    \"SidebarToggle\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,gBAAgB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2CACA"}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 802, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 807, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 812, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/actions.ts"],"sourcesContent":["'use server'\n\nimport { revalidatePath } from 'next/cache'\nimport { redirect } from 'next/navigation'\nimport { kv } from '@vercel/kv'\n\nimport { auth } from '@/auth'\nimport { type Chat } from '@/lib/types'\n\nexport async function getChats(userId?: string | null) {\n  const session = await auth()\n\n  if (!userId) {\n    return []\n  }\n\n  if (userId !== session?.user?.id) {\n    return {\n      error: 'Unauthorized'\n    }\n  }\n\n  try {\n    const pipeline = kv.pipeline()\n    const chats: string[] = await kv.zrange(`user:chat:${userId}`, 0, -1, {\n      rev: true\n    })\n\n    for (const chat of chats) {\n      pipeline.hgetall(chat)\n    }\n\n    const results = await pipeline.exec()\n\n    return results as Chat[]\n  } catch (error) {\n    return []\n  }\n}\n\nexport async function getChat(id: string, userId: string) {\n  const session = await auth()\n\n  if (userId !== session?.user?.id) {\n    return {\n      error: 'Unauthorized'\n    }\n  }\n\n  const chat = await kv.hgetall<Chat>(`chat:${id}`)\n\n  if (!chat || (userId && chat.userId !== userId)) {\n    return null\n  }\n\n  return chat\n}\n\nexport async function removeChat({ id, path }: { id: string; path: string }) {\n  const session = await auth()\n\n  if (!session) {\n    return {\n      error: 'Unauthorized'\n    }\n  }\n\n  // Convert uid to string for consistent comparison with session.user.id\n  const uid = String(await kv.hget(`chat:${id}`, 'userId'))\n\n  if (uid !== session?.user?.id) {\n    return {\n      error: 'Unauthorized'\n    }\n  }\n\n  await kv.del(`chat:${id}`)\n  await kv.zrem(`user:chat:${session.user.id}`, `chat:${id}`)\n\n  revalidatePath('/')\n  return revalidatePath(path)\n}\n\nexport async function clearChats() {\n  const session = await auth()\n\n  if (!session?.user?.id) {\n    return {\n      error: 'Unauthorized'\n    }\n  }\n\n  const chats: string[] = await kv.zrange(`user:chat:${session.user.id}`, 0, -1)\n  if (!chats.length) {\n    return redirect('/')\n  }\n  const pipeline = kv.pipeline()\n\n  for (const chat of chats) {\n    pipeline.del(chat)\n    pipeline.zrem(`user:chat:${session.user.id}`, chat)\n  }\n\n  await pipeline.exec()\n\n  revalidatePath('/')\n  return redirect('/')\n}\n\nexport async function getSharedChat(id: string) {\n  const chat = await kv.hgetall<Chat>(`chat:${id}`)\n\n  if (!chat || !chat.sharePath) {\n    return null\n  }\n\n  return chat\n}\n\nexport async function shareChat(id: string) {\n  const session = await auth()\n\n  if (!session?.user?.id) {\n    return {\n      error: 'Unauthorized'\n    }\n  }\n\n  const chat = await kv.hgetall<Chat>(`chat:${id}`)\n\n  if (!chat || chat.userId !== session.user.id) {\n    return {\n      error: 'Something went wrong'\n    }\n  }\n\n  const payload = {\n    ...chat,\n    sharePath: `/share/${chat.id}`\n  }\n\n  await kv.hmset(`chat:${chat.id}`, payload)\n\n  return payload\n}\n\nexport async function saveChat(chat: Chat) {\n  const session = await auth()\n\n  if (session && session.user) {\n    const pipeline = kv.pipeline()\n    pipeline.hmset(`chat:${chat.id}`, chat)\n    pipeline.zadd(`user:chat:${chat.userId}`, {\n      score: Date.now(),\n      member: `chat:${chat.id}`\n    })\n    await pipeline.exec()\n  } else {\n    return\n  }\n}\n\nexport async function refreshHistory(path: string) {\n  redirect(path)\n}\n\nexport async function getMissingKeys() {\n  const keysRequired = ['OPENAI_API_KEY']\n  return keysRequired\n    .map(key => (process.env[key] ? '' : key))\n    .filter(key => key !== '')\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 985, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 990, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/clear-history.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ClearHistory = registerClientReference(\n    function() { throw new Error(\"Attempted to call ClearHistory() from the server but ClearHistory is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/clear-history.tsx\",\n    \"ClearHistory\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA"}},
    {"offset": {"line": 999, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1004, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1014, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/sidebar-items.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SidebarItems = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarItems() from the server but SidebarItems is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/sidebar-items.tsx\",\n    \"SidebarItems\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,eAAe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,0CACA"}},
    {"offset": {"line": 1023, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1033, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/theme-toggle.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeToggle() from the server but ThemeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme-toggle.tsx\",\n    \"ThemeToggle\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,cAAc,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,yCACA"}},
    {"offset": {"line": 1047, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1057, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1062, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/sidebar-list.tsx"],"sourcesContent":["import { clearChats, getChats } from '@/app/actions'\nimport { ClearHistory } from '@/components/clear-history'\nimport { SidebarItems } from '@/components/sidebar-items'\nimport { ThemeToggle } from '@/components/theme-toggle'\nimport { redirect } from 'next/navigation'\nimport { cache } from 'react'\n\ninterface SidebarListProps {\n  userId?: string\n  children?: React.ReactNode\n}\n\nconst loadChats = cache(async (userId?: string) => {\n  return await getChats(userId)\n})\n\nexport async function SidebarList({ userId }: SidebarListProps) {\n  const chats = await loadChats(userId)\n\n  if (!chats || 'error' in chats) {\n    redirect('/')\n  } else {\n    return (\n      <div className=\"flex flex-1 flex-col overflow-hidden\">\n        <div className=\"flex-1 overflow-auto\">\n          {chats?.length ? (\n            <div className=\"space-y-2 px-2\">\n              <SidebarItems chats={chats} />\n            </div>\n          ) : (\n            <div className=\"p-8 text-center\">\n              <p className=\"text-sm text-muted-foreground\">No chat history</p>\n            </div>\n          )}\n        </div>\n        <div className=\"flex items-center justify-between p-4\">\n          <ThemeToggle />\n          <ClearHistory clearChats={clearChats} isEnabled={chats?.length > 0} />\n        </div>\n      </div>\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAYA,MAAM,YAAY,CAAA,GAAA,oTAAA,CAAA,QAAK,AAAD,EAAE,OAAO;IAC7B,OAAO,MAAM,CAAA,GAAA,8GAAA,CAAA,WAAQ,AAAD,EAAE;AACxB;AAEO,eAAe,YAAY,EAAE,MAAM,EAAoB;IAC5D,MAAM,QAAQ,MAAM,UAAU;IAE9B,IAAI,CAAC,SAAS,WAAW,OAAO;QAC9B,CAAA,GAAA,0RAAA,CAAA,WAAQ,AAAD,EAAE;IACX,OAAO;QACL,qBACE,6VAAC;YAAI,WAAU;;8BACb,6VAAC;oBAAI,WAAU;8BACZ,OAAO,uBACN,6VAAC;wBAAI,WAAU;kCACb,cAAA,6VAAC,+HAAA,CAAA,eAAY;4BAAC,OAAO;;;;;;;;;;6CAGvB,6VAAC;wBAAI,WAAU;kCACb,cAAA,6VAAC;4BAAE,WAAU;sCAAgC;;;;;;;;;;;;;;;;8BAInD,6VAAC;oBAAI,WAAU;;sCACb,6VAAC,8HAAA,CAAA,cAAW;;;;;sCACZ,6VAAC,+HAAA,CAAA,eAAY;4BAAC,YAAY,8GAAA,CAAA,aAAU;4BAAE,WAAW,OAAO,SAAS;;;;;;;;;;;;;;;;;;IAIzE;AACF"}},
    {"offset": {"line": 1157, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1162, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/chat-history.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport Link from 'next/link'\n\nimport { cn } from '@/lib/utils'\nimport { SidebarList } from '@/components/sidebar-list'\nimport { buttonVariants } from '@/components/ui/button'\nimport { IconPlus } from '@/components/ui/icons'\n\ninterface ChatHistoryProps {\n  userId?: string\n}\n\nexport async function ChatHistory({ userId }: ChatHistoryProps) {\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex items-center justify-between p-4\">\n        <h4 className=\"text-sm font-medium\">Chat History</h4>\n      </div>\n      <div className=\"mb-2 px-2\">\n        <Link\n          href=\"/\"\n          className={cn(\n            buttonVariants({ variant: 'outline' }),\n            'h-10 w-full justify-start bg-zinc-50 px-4 shadow-none transition-colors hover:bg-zinc-200/40 dark:bg-zinc-900 dark:hover:bg-zinc-300/10'\n          )}\n        >\n          <IconPlus className=\"-translate-x-2 stroke-2\" />\n          New Chat\n        </Link>\n      </div>\n      <React.Suspense\n        fallback={\n          <div className=\"flex flex-col flex-1 px-4 space-y-4 overflow-auto\">\n            {Array.from({ length: 10 }).map((_, i) => (\n              <div\n                key={i}\n                className=\"w-full h-6 rounded-md shrink-0 animate-pulse bg-zinc-200 dark:bg-zinc-800\"\n              />\n            ))}\n          </div>\n        }\n      >\n        {/* @ts-ignore */}\n        <SidebarList userId={userId} />\n      </React.Suspense>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAaO,eAAe,YAAY,EAAE,MAAM,EAAoB;IAC5D,qBACE,6VAAC;QAAI,WAAU;;0BACb,6VAAC;gBAAI,WAAU;0BACb,cAAA,6VAAC;oBAAG,WAAU;8BAAsB;;;;;;;;;;;0BAEtC,6VAAC;gBAAI,WAAU;0BACb,cAAA,6VAAC,iOAAA,CAAA,UAAI;oBACH,MAAK;oBACL,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,CAAA,GAAA,2HAAA,CAAA,iBAAc,AAAD,EAAE;wBAAE,SAAS;oBAAU,IACpC;;sCAGF,6VAAC,0HAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBAA4B;;;;;;;;;;;;0BAIpD,6VAAC,qTAAM,QAAQ;gBACb,wBACE,6VAAC;oBAAI,WAAU;8BACZ,MAAM,IAAI,CAAC;wBAAE,QAAQ;oBAAG,GAAG,GAAG,CAAC,CAAC,GAAG,kBAClC,6VAAC;4BAEC,WAAU;2BADL;;;;;;;;;;0BAQb,cAAA,6VAAC,8HAAA,CAAA,cAAW;oBAAC,QAAQ;;;;;;;;;;;;;;;;;AAI7B"}},
    {"offset": {"line": 1262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1267, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/header.tsx"],"sourcesContent":["import * as React from 'react'\nimport Link from 'next/link'\n\nimport { cn } from '@/lib/utils'\nimport { auth } from '@/auth'\nimport { Button, buttonVariants } from '@/components/ui/button'\nimport {\n  IconGitHub,\n  IconNextChat,\n  IconSeparator,\n  IconVercel\n} from '@/components/ui/icons'\nimport { UserMenu } from '@/components/user-menu'\nimport { SidebarMobile } from './sidebar-mobile'\nimport { SidebarToggle } from './sidebar-toggle'\nimport { ChatHistory } from './chat-history'\nimport { Session } from '@/lib/types'\n\nasync function UserOrLogin() {\n  const session = (await auth()) as Session\n  return (\n    <>\n      {session?.user ? (\n        <>\n          <SidebarMobile>\n            <ChatHistory userId={session.user.id} />\n          </SidebarMobile>\n          <SidebarToggle />\n        </>\n      ) : (\n        <Link href=\"/new\" rel=\"nofollow\">\n          <IconNextChat className=\"size-6 mr-2 dark:hidden\" inverted />\n          <IconNextChat className=\"hidden size-6 mr-2 dark:block\" />\n        </Link>\n      )}\n      <div className=\"flex items-center\">\n        <IconSeparator className=\"size-6 text-muted-foreground/50\" />\n        {session?.user ? (\n          <UserMenu user={session.user} />\n        ) : (\n          <Button variant=\"link\" asChild className=\"-ml-2\">\n            <Link href=\"/login\">Login</Link>\n          </Button>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport function Header() {\n  return (\n    <header className=\"sticky top-0 z-50 flex items-center justify-between w-full h-16 px-4 border-b shrink-0 bg-gradient-to-b from-background/10 via-background/50 to-background/80 backdrop-blur-xl\">\n      <div className=\"flex items-center\">\n        <React.Suspense fallback={<div className=\"flex-1 overflow-auto\" />}>\n          <UserOrLogin />\n        </React.Suspense>\n      </div>\n    </header>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAkBA,eAAe;IACb,MAAM,UAAW,MAAM,CAAA,GAAA,oGAAA,CAAA,OAAI,AAAD;IAC1B,qBACE;;YACG,SAAS,qBACR;;kCACE,6VAAC,gIAAA,CAAA,gBAAa;kCACZ,cAAA,6VAAC,8HAAA,CAAA,cAAW;4BAAC,QAAQ,QAAQ,IAAI,CAAC,EAAE;;;;;;;;;;;kCAEtC,6VAAC,gIAAA,CAAA,gBAAa;;;;;;6CAGhB,6VAAC,iOAAA,CAAA,UAAI;gBAAC,MAAK;gBAAO,KAAI;;kCACpB,6VAAC,0HAAA,CAAA,eAAY;wBAAC,WAAU;wBAA0B,QAAQ;;;;;;kCAC1D,6VAAC,0HAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;;;;;;;0BAG5B,6VAAC;gBAAI,WAAU;;kCACb,6VAAC,0HAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;oBACxB,SAAS,qBACR,6VAAC,2HAAA,CAAA,WAAQ;wBAAC,MAAM,QAAQ,IAAI;;;;;6CAE5B,6VAAC,2HAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAO,OAAO;wBAAC,WAAU;kCACvC,cAAA,6VAAC,iOAAA,CAAA,UAAI;4BAAC,MAAK;sCAAS;;;;;;;;;;;;;;;;;;;AAMhC;AAEO,SAAS;IACd,qBACE,6VAAC;QAAO,WAAU;kBAChB,cAAA,6VAAC;YAAI,WAAU;sBACb,cAAA,6VAAC,qTAAM,QAAQ;gBAAC,wBAAU,6VAAC;oBAAI,WAAU;;;;;;0BACvC,cAAA,6VAAC;;;;;;;;;;;;;;;;;;;;AAKX"}},
    {"offset": {"line": 1417, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1422, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/ui/sonner.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Toaster = registerClientReference(\n    function() { throw new Error(\"Attempted to call Toaster() from the server but Toaster is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sonner.tsx\",\n    \"Toaster\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,sCACA"}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1441, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1446, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/layout.tsx"],"sourcesContent":["import { GeistSans } from 'geist/font/sans'\nimport { GeistMono } from 'geist/font/mono'\n\nimport '@/app/globals.css'\nimport { cn } from '@/lib/utils'\nimport { TailwindIndicator } from '@/components/tailwind-indicator'\nimport { Providers } from '@/components/providers'\nimport { Header } from '@/components/header'\nimport { Toaster } from '@/components/ui/sonner'\n\nexport const metadata = {\n  metadataBase: process.env.VERCEL_URL\n    ? new URL(`https://${process.env.VERCEL_URL}`)\n    : undefined,\n  title: {\n    default: 'Next.js AI Chatbot',\n    template: `%s - Next.js AI Chatbot`\n  },\n  description: 'An AI-powered customer support.',\n  icons: {\n    icon: '/favicon.ico',\n    shortcut: '/favicon-16x16.png',\n    apple: '/apple-touch-icon.png'\n  }\n}\n\nexport const viewport = {\n  themeColor: [\n    { media: '(prefers-color-scheme: light)', color: 'white' },\n    { media: '(prefers-color-scheme: dark)', color: 'black' }\n  ]\n}\n\ninterface RootLayoutProps {\n  children: React.ReactNode\n}\n\nexport default function RootLayout({ children }: RootLayoutProps) {\n  return (\n    <html lang=\"en\" suppressHydrationWarning>\n      <body\n        className={cn(\n          'font-sans antialiased',\n          GeistSans.variable,\n          GeistMono.variable\n        )}\n      >\n        <Toaster position=\"top-center\" />\n        <Providers\n          attribute=\"class\"\n          defaultTheme=\"system\"\n          enableSystem\n          disableTransitionOnChange\n        >\n          <div className=\"flex flex-col min-h-screen\">\n            <Header />\n            <main className=\"flex flex-col flex-1 bg-muted/50\">{children}</main>\n          </div>\n          <TailwindIndicator />\n        </Providers>\n      </body>\n    </html>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAUO,MAAM,WAAW;IACtB,cAAc,QAAQ,GAAG,CAAC,UAAU,GAChC,IAAI,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,CAAC,UAAU,CAAC,CAAC,IAC3C;IACJ,OAAO;QACL,SAAS;QACT,UAAU,CAAC,uBAAuB,CAAC;IACrC;IACA,aAAa;IACb,OAAO;QACL,MAAM;QACN,UAAU;QACV,OAAO;IACT;AACF;AAEO,MAAM,WAAW;IACtB,YAAY;QACV;YAAE,OAAO;YAAiC,OAAO;QAAQ;QACzD;YAAE,OAAO;YAAgC,OAAO;QAAQ;KACzD;AACH;AAMe,SAAS,WAAW,EAAE,QAAQ,EAAmB;IAC9D,qBACE,6VAAC;QAAK,MAAK;QAAK,wBAAwB;kBACtC,cAAA,6VAAC;YACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,yBACA,kQAAA,CAAA,YAAS,CAAC,QAAQ,EAClB,kQAAA,CAAA,YAAS,CAAC,QAAQ;;8BAGpB,6VAAC,2HAAA,CAAA,UAAO;oBAAC,UAAS;;;;;;8BAClB,6VAAC,wHAAA,CAAA,YAAS;oBACR,WAAU;oBACV,cAAa;oBACb,YAAY;oBACZ,yBAAyB;;sCAEzB,6VAAC;4BAAI,WAAU;;8CACb,6VAAC,qHAAA,CAAA,SAAM;;;;;8CACP,6VAAC;oCAAK,WAAU;8CAAoC;;;;;;;;;;;;sCAEtD,6VAAC,oIAAA,CAAA,oBAAiB;;;;;;;;;;;;;;;;;;;;;;AAK5B"}},
    {"offset": {"line": 1561, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1573, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/sidebar.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/sidebar.tsx\",\n    \"Sidebar\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,UAAU,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oCACA"}},
    {"offset": {"line": 1582, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1592, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1597, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/sidebar-desktop.tsx"],"sourcesContent":["import { Sidebar } from '@/components/sidebar'\n\nimport { auth } from '@/auth'\nimport { ChatHistory } from '@/components/chat-history'\n\nexport async function SidebarDesktop() {\n  const session = await auth()\n\n  if (!session?.user?.id) {\n    return null\n  }\n\n  return (\n    <Sidebar className=\"peer absolute inset-y-0 z-30 hidden -translate-x-full border-r bg-muted duration-300 ease-in-out data-[state=open]:translate-x-0 lg:flex lg:w-[250px] xl:w-[300px]\">\n      {/* @ts-ignore */}\n      <ChatHistory userId={session.user.id} />\n    </Sidebar>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAKO,eAAe;IACpB,MAAM,UAAU,MAAM,CAAA,GAAA,oGAAA,CAAA,OAAI,AAAD;IAEzB,IAAI,CAAC,SAAS,MAAM,IAAI;QACtB,OAAO;IACT;IAEA,qBACE,6VAAC,sHAAA,CAAA,UAAO;QAAC,WAAU;kBAEjB,cAAA,6VAAC,8HAAA,CAAA,cAAW;YAAC,QAAQ,QAAQ,IAAI,CAAC,EAAE;;;;;;;;;;;AAG1C"}},
    {"offset": {"line": 1629, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1634, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(chat)/layout.tsx"],"sourcesContent":["import { SidebarDesktop } from '@/components/sidebar-desktop'\n\ninterface ChatLayoutProps {\n  children: React.ReactNode\n}\n\nexport default async function ChatLayout({ children }: ChatLayoutProps) {\n  return (\n    <div className=\"relative flex h-[calc(100vh_-_theme(spacing.16))] overflow-hidden\">\n      <SidebarDesktop />\n      {children}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;AAMe,eAAe,WAAW,EAAE,QAAQ,EAAmB;IACpE,qBACE,6VAAC;QAAI,WAAU;;0BACb,6VAAC,iIAAA,CAAA,iBAAc;;;;;YACd;;;;;;;AAGP"}},
    {"offset": {"line": 1659, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1671, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/chat.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Chat = registerClientReference(\n    function() { throw new Error(\"Attempted to call Chat() from the server but Chat is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/chat.tsx\",\n    \"Chat\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,OAAO,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,iCACA"}},
    {"offset": {"line": 1680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1685, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1690, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1695, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/stocks/index.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BotCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call BotCard() from the server but BotCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/index.tsx\",\n    \"BotCard\",\n);\nexport const BotMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call BotMessage() from the server but BotMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/index.tsx\",\n    \"BotMessage\",\n);\nexport const Events = registerClientReference(\n    function() { throw new Error(\"Attempted to call Events() from the server but Events is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/index.tsx\",\n    \"Events\",\n);\nexport const Purchase = registerClientReference(\n    function() { throw new Error(\"Attempted to call Purchase() from the server but Purchase is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/index.tsx\",\n    \"Purchase\",\n);\nexport const Stock = registerClientReference(\n    function() { throw new Error(\"Attempted to call Stock() from the server but Stock is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/index.tsx\",\n    \"Stock\",\n);\nexport const Stocks = registerClientReference(\n    function() { throw new Error(\"Attempted to call Stocks() from the server but Stocks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/index.tsx\",\n    \"Stocks\",\n);\nexport const SystemMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call SystemMessage() from the server but SystemMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/index.tsx\",\n    \"SystemMessage\",\n);\nexport const spinner = registerClientReference(\n    function() { throw new Error(\"Attempted to call spinner() from the server but spinner is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/index.tsx\",\n    \"spinner\",\n);\n"],"names":[],"mappings":";;;;;;;;;;;;;AACO,MAAM,UAAU,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,yCACA;AAEG,MAAM,aAAa,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,yCACA;AAEG,MAAM,SAAS,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yCACA;AAEG,MAAM,WAAW,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yCACA;AAEG,MAAM,QAAQ,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA;AAEG,MAAM,SAAS,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,yCACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,yCACA;AAEG,MAAM,UAAU,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,yCACA"}},
    {"offset": {"line": 1732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1742, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1747, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/stocks/events-skeleton.tsx"],"sourcesContent":["const placeholderEvents = [\n  {\n    date: '2022-10-01',\n    headline: 'NVIDIA releases new AI-powered graphics card',\n    description:\n      'NVIDIA unveils the latest graphics card infused with AI capabilities, revolutionizing gaming and rendering experiences.'\n  }\n]\n\nexport const EventsSkeleton = () => {\n  return (\n    <div className=\"-mt-2 flex w-full flex-col gap-2 py-4\">\n      {placeholderEvents.map(event => (\n        <div\n          key={event.date}\n          className=\"flex shrink-0 flex-col gap-1 rounded-lg bg-zinc-800 p-4\"\n        >\n          <div className=\"w-fit rounded-md bg-zinc-700 text-sm text-transparent\">\n            {event.date}\n          </div>\n          <div className=\"w-fit rounded-md bg-zinc-700 text-transparent\">\n            {event.headline}\n          </div>\n          <div className=\"w-auto rounded-md bg-zinc-700 text-transparent\">\n            {event.description.slice(0, 70)}...\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAAA,MAAM,oBAAoB;IACxB;QACE,MAAM;QACN,UAAU;QACV,aACE;IACJ;CACD;AAEM,MAAM,iBAAiB;IAC5B,qBACE,6VAAC;QAAI,WAAU;kBACZ,kBAAkB,GAAG,CAAC,CAAA,sBACrB,6VAAC;gBAEC,WAAU;;kCAEV,6VAAC;wBAAI,WAAU;kCACZ,MAAM,IAAI;;;;;;kCAEb,6VAAC;wBAAI,WAAU;kCACZ,MAAM,QAAQ;;;;;;kCAEjB,6VAAC;wBAAI,WAAU;;4BACZ,MAAM,WAAW,CAAC,KAAK,CAAC,GAAG;4BAAI;;;;;;;;eAV7B,MAAM,IAAI;;;;;;;;;;AAgBzB"}},
    {"offset": {"line": 1805, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1810, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/stocks/events.tsx"],"sourcesContent":["import { format, parseISO } from 'date-fns'\n\ninterface Event {\n  date: string\n  headline: string\n  description: string\n}\n\nexport function Events({ props: events }: { props: Event[] }) {\n  return (\n    <div className=\"-mt-2 flex w-full flex-col gap-2 py-4\">\n      {events.map(event => (\n        <div\n          key={event.date}\n          className=\"flex shrink-0 flex-col gap-1 rounded-lg bg-zinc-800 p-4\"\n        >\n          <div className=\"text-sm text-zinc-400\">\n            {format(parseISO(event.date), 'dd LLL, yyyy')}\n          </div>\n          <div className=\"text-base font-bold text-zinc-200\">\n            {event.headline}\n          </div>\n          <div className=\"text-zinc-500\">\n            {event.description.slice(0, 70)}...\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;;;;AAQO,SAAS,OAAO,EAAE,OAAO,MAAM,EAAsB;IAC1D,qBACE,6VAAC;QAAI,WAAU;kBACZ,OAAO,GAAG,CAAC,CAAA,sBACV,6VAAC;gBAEC,WAAU;;kCAEV,6VAAC;wBAAI,WAAU;kCACZ,CAAA,GAAA,8MAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,gMAAA,CAAA,WAAQ,AAAD,EAAE,MAAM,IAAI,GAAG;;;;;;kCAEhC,6VAAC;wBAAI,WAAU;kCACZ,MAAM,QAAQ;;;;;;kCAEjB,6VAAC;wBAAI,WAAU;;4BACZ,MAAM,WAAW,CAAC,KAAK,CAAC,GAAG;4BAAI;;;;;;;;eAV7B,MAAM,IAAI;;;;;;;;;;AAgBzB"}},
    {"offset": {"line": 1864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1869, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/stocks/stocks-skeleton.tsx"],"sourcesContent":["export const StocksSkeleton = () => {\n  return (\n    <div className=\"mb-4 flex flex-col gap-2 overflow-y-scroll pb-4 text-sm sm:flex-row\">\n      <div className=\"flex h-[60px] w-full cursor-pointer flex-row gap-2 rounded-lg bg-zinc-800 p-2 text-left hover:bg-zinc-800 sm:w-[208px]\"></div>\n      <div className=\"flex h-[60px] w-full cursor-pointer flex-row gap-2 rounded-lg bg-zinc-800 p-2 text-left hover:bg-zinc-800 sm:w-[208px]\"></div>\n      <div className=\"flex h-[60px] w-full cursor-pointer flex-row gap-2 rounded-lg bg-zinc-800 p-2 text-left hover:bg-zinc-800 sm:w-[208px]\"></div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,iBAAiB;IAC5B,qBACE,6VAAC;QAAI,WAAU;;0BACb,6VAAC;gBAAI,WAAU;;;;;;0BACf,6VAAC;gBAAI,WAAU;;;;;;0BACf,6VAAC;gBAAI,WAAU;;;;;;;;;;;;AAGrB"}},
    {"offset": {"line": 1907, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1912, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/stocks/stocks.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Stocks = registerClientReference(\n    function() { throw new Error(\"Attempted to call Stocks() from the server but Stocks is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/stocks.tsx\",\n    \"Stocks\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,SAAS,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA"}},
    {"offset": {"line": 1921, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1926, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 1931, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1936, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/stocks/stock-skeleton.tsx"],"sourcesContent":["export const StockSkeleton = () => {\n  return (\n    <div className=\"rounded-xl border border-zinc-800 bg-zinc-950 p-4 text-green-400\">\n      <div className=\"float-right inline-block w-fit rounded-full bg-zinc-700 px-2 py-1 text-xs text-transparent\">\n        xxxxxxx\n      </div>\n      <div className=\"mb-1 w-fit rounded-md bg-zinc-700 text-lg text-transparent\">\n        xxxx\n      </div>\n      <div className=\"w-fit rounded-md bg-zinc-700 text-3xl font-bold text-transparent\">\n        xxxx\n      </div>\n      <div className=\"text mt-1 w-fit rounded-md bg-zinc-700 text-xs text-transparent\">\n        xxxxxx xxx xx xxxx xx xxx\n      </div>\n\n      <div className=\"relative -mx-4 cursor-col-resize\">\n        <div style={{ height: 146 }}></div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;;AAAO,MAAM,gBAAgB;IAC3B,qBACE,6VAAC;QAAI,WAAU;;0BACb,6VAAC;gBAAI,WAAU;0BAA6F;;;;;;0BAG5G,6VAAC;gBAAI,WAAU;0BAA6D;;;;;;0BAG5E,6VAAC;gBAAI,WAAU;0BAAmE;;;;;;0BAGlF,6VAAC;gBAAI,WAAU;0BAAkE;;;;;;0BAIjF,6VAAC;gBAAI,WAAU;0BACb,cAAA,6VAAC;oBAAI,OAAO;wBAAE,QAAQ;oBAAI;;;;;;;;;;;;;;;;;AAIlC"}},
    {"offset": {"line": 2001, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/components/stocks/message.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BotCard = registerClientReference(\n    function() { throw new Error(\"Attempted to call BotCard() from the server but BotCard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/message.tsx\",\n    \"BotCard\",\n);\nexport const BotMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call BotMessage() from the server but BotMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/message.tsx\",\n    \"BotMessage\",\n);\nexport const SpinnerMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call SpinnerMessage() from the server but SpinnerMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/message.tsx\",\n    \"SpinnerMessage\",\n);\nexport const SystemMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call SystemMessage() from the server but SystemMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/message.tsx\",\n    \"SystemMessage\",\n);\nexport const UserMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call UserMessage() from the server but UserMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/stocks/message.tsx\",\n    \"UserMessage\",\n);\n"],"names":[],"mappings":";;;;;;;;;;AACO,MAAM,UAAU,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACzC;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2CACA;AAEG,MAAM,aAAa,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,2CACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2CACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2CACA;AAEG,MAAM,cAAc,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2CACA"}},
    {"offset": {"line": 2031, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2036, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 2041, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2046, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/lib/chat/actions.tsx"],"sourcesContent":["import 'server-only'\n\nimport {\n  createAI,\n  createStreamableUI,\n  getMutableAIState,\n  getAIState,\n  streamUI,\n  createStreamableValue\n} from 'ai/rsc'\nimport { openai } from '@ai-sdk/openai'\n\nimport {\n  spinner,\n  BotCard,\n  BotMessage,\n  SystemMessage,\n  Stock,\n  Purchase\n} from '@/components/stocks'\n\nimport { z } from 'zod'\nimport { EventsSkeleton } from '@/components/stocks/events-skeleton'\nimport { Events } from '@/components/stocks/events'\nimport { StocksSkeleton } from '@/components/stocks/stocks-skeleton'\nimport { Stocks } from '@/components/stocks/stocks'\nimport { StockSkeleton } from '@/components/stocks/stock-skeleton'\nimport {\n  formatNumber,\n  runAsyncFnWithoutBlocking,\n  sleep,\n  nanoid\n} from '@/lib/utils'\nimport { saveChat } from '@/app/actions'\nimport { SpinnerMessage, UserMessage } from '@/components/stocks/message'\nimport { Chat, Message } from '@/lib/types'\nimport { auth } from '@/auth'\n\nasync function confirmPurchase(symbol: string, price: number, amount: number) {\n  'use server'\n\n  const aiState = getMutableAIState<typeof AI>()\n\n  const purchasing = createStreamableUI(\n    <div className=\"inline-flex items-start gap-1 md:items-center\">\n      {spinner}\n      <p className=\"mb-2\">\n        Purchasing {amount} ${symbol}...\n      </p>\n    </div>\n  )\n\n  const systemMessage = createStreamableUI(null)\n\n  runAsyncFnWithoutBlocking(async () => {\n    await sleep(1000)\n\n    purchasing.update(\n      <div className=\"inline-flex items-start gap-1 md:items-center\">\n        {spinner}\n        <p className=\"mb-2\">\n          Purchasing {amount} ${symbol}... working on it...\n        </p>\n      </div>\n    )\n\n    await sleep(1000)\n\n    purchasing.done(\n      <div>\n        <p className=\"mb-2\">\n          You have successfully purchased {amount} ${symbol}. Total cost:{' '}\n          {formatNumber(amount * price)}\n        </p>\n      </div>\n    )\n\n    systemMessage.done(\n      <SystemMessage>\n        You have purchased {amount} shares of {symbol} at ${price}. Total cost ={' '}\n        {formatNumber(amount * price)}.\n      </SystemMessage>\n    )\n\n    aiState.done({\n      ...aiState.get(),\n      messages: [\n        ...aiState.get().messages,\n        {\n          id: nanoid(),\n          role: 'system',\n          content: `[User has purchased ${amount} shares of ${symbol} at ${price}. Total cost = ${\n            amount * price\n          }]`\n        }\n      ]\n    })\n  })\n\n  return {\n    purchasingUI: purchasing.value,\n    newMessage: {\n      id: nanoid(),\n      display: systemMessage.value\n    }\n  }\n}\n\nasync function submitUserMessage(content: string) {\n  'use server'\n\n  const aiState = getMutableAIState<typeof AI>()\n\n  aiState.update({\n    ...aiState.get(),\n    messages: [\n      ...aiState.get().messages,\n      {\n        id: nanoid(),\n        role: 'user',\n        content\n      }\n    ]\n  })\n\n  let textStream: undefined | ReturnType<typeof createStreamableValue<string>>\n  let textNode: undefined | React.ReactNode\n\n  const result = await streamUI({\n    model: openai('gpt-3.5-turbo'),\n    initial: <SpinnerMessage />,\n    system: `\\\n    You are a stock trading conversation bot and you can help users buy stocks, step by step.\n    You and the user can discuss stock prices and the user can adjust the amount of stocks they want to buy, or place an order, in the UI.\n    \n    Messages inside [] means that it's a UI element or a user event. For example:\n    - \"[Price of AAPL = 100]\" means that an interface of the stock price of AAPL is shown to the user.\n    - \"[User has changed the amount of AAPL to 10]\" means that the user has changed the amount of AAPL to 10 in the UI.\n    \n    If the user requests purchasing a stock, call \\`show_stock_purchase_ui\\` to show the purchase UI.\n    If the user just wants the price, call \\`show_stock_price\\` to show the price.\n    If you want to show trending stocks, call \\`list_stocks\\`.\n    If you want to show events, call \\`get_events\\`.\n    If the user wants to sell stock, or complete another impossible task, respond that you are a demo and cannot do that.\n    \n    Besides that, you can also chat with users and do some calculations if needed.`,\n    messages: [\n      ...aiState.get().messages.map((message: any) => ({\n        role: message.role,\n        content: message.content,\n        name: message.name\n      }))\n    ],\n    text: ({ content, done, delta }) => {\n      if (!textStream) {\n        textStream = createStreamableValue('')\n        textNode = <BotMessage content={textStream.value} />\n      }\n\n      if (done) {\n        textStream.done()\n        aiState.done({\n          ...aiState.get(),\n          messages: [\n            ...aiState.get().messages,\n            {\n              id: nanoid(),\n              role: 'assistant',\n              content\n            }\n          ]\n        })\n      } else {\n        textStream.update(delta)\n      }\n\n      return textNode\n    },\n    tools: {\n      listStocks: {\n        description: 'List three imaginary stocks that are trending.',\n        parameters: z.object({\n          stocks: z.array(\n            z.object({\n              symbol: z.string().describe('The symbol of the stock'),\n              price: z.number().describe('The price of the stock'),\n              delta: z.number().describe('The change in price of the stock')\n            })\n          )\n        }),\n        generate: async function* ({ stocks }) {\n          yield (\n            <BotCard>\n              <StocksSkeleton />\n            </BotCard>\n          )\n\n          await sleep(1000)\n\n          const toolCallId = nanoid()\n\n          aiState.done({\n            ...aiState.get(),\n            messages: [\n              ...aiState.get().messages,\n              {\n                id: nanoid(),\n                role: 'assistant',\n                content: [\n                  {\n                    type: 'tool-call',\n                    toolName: 'listStocks',\n                    toolCallId,\n                    args: { stocks }\n                  }\n                ]\n              },\n              {\n                id: nanoid(),\n                role: 'tool',\n                content: [\n                  {\n                    type: 'tool-result',\n                    toolName: 'listStocks',\n                    toolCallId,\n                    result: stocks\n                  }\n                ]\n              }\n            ]\n          })\n\n          return (\n            <BotCard>\n              <Stocks props={stocks} />\n            </BotCard>\n          )\n        }\n      },\n      showStockPrice: {\n        description:\n          'Get the current stock price of a given stock or currency. Use this to show the price to the user.',\n        parameters: z.object({\n          symbol: z\n            .string()\n            .describe(\n              'The name or symbol of the stock or currency. e.g. DOGE/AAPL/USD.'\n            ),\n          price: z.number().describe('The price of the stock.'),\n          delta: z.number().describe('The change in price of the stock')\n        }),\n        generate: async function* ({ symbol, price, delta }) {\n          yield (\n            <BotCard>\n              <StockSkeleton />\n            </BotCard>\n          )\n\n          await sleep(1000)\n\n          const toolCallId = nanoid()\n\n          aiState.done({\n            ...aiState.get(),\n            messages: [\n              ...aiState.get().messages,\n              {\n                id: nanoid(),\n                role: 'assistant',\n                content: [\n                  {\n                    type: 'tool-call',\n                    toolName: 'showStockPrice',\n                    toolCallId,\n                    args: { symbol, price, delta }\n                  }\n                ]\n              },\n              {\n                id: nanoid(),\n                role: 'tool',\n                content: [\n                  {\n                    type: 'tool-result',\n                    toolName: 'showStockPrice',\n                    toolCallId,\n                    result: { symbol, price, delta }\n                  }\n                ]\n              }\n            ]\n          })\n\n          return (\n            <BotCard>\n              <Stock props={{ symbol, price, delta }} />\n            </BotCard>\n          )\n        }\n      },\n      showStockPurchase: {\n        description:\n          'Show price and the UI to purchase a stock or currency. Use this if the user wants to purchase a stock or currency.',\n        parameters: z.object({\n          symbol: z\n            .string()\n            .describe(\n              'The name or symbol of the stock or currency. e.g. DOGE/AAPL/USD.'\n            ),\n          price: z.number().describe('The price of the stock.'),\n          numberOfShares: z\n            .number()\n            .optional()\n            .describe(\n              'The **number of shares** for a stock or currency to purchase. Can be optional if the user did not specify it.'\n            )\n        }),\n        generate: async function* ({ symbol, price, numberOfShares = 100 }) {\n          const toolCallId = nanoid()\n\n          if (numberOfShares <= 0 || numberOfShares > 1000) {\n            aiState.done({\n              ...aiState.get(),\n              messages: [\n                ...aiState.get().messages,\n                {\n                  id: nanoid(),\n                  role: 'assistant',\n                  content: [\n                    {\n                      type: 'tool-call',\n                      toolName: 'showStockPurchase',\n                      toolCallId,\n                      args: { symbol, price, numberOfShares }\n                    }\n                  ]\n                },\n                {\n                  id: nanoid(),\n                  role: 'tool',\n                  content: [\n                    {\n                      type: 'tool-result',\n                      toolName: 'showStockPurchase',\n                      toolCallId,\n                      result: {\n                        symbol,\n                        price,\n                        numberOfShares,\n                        status: 'expired'\n                      }\n                    }\n                  ]\n                },\n                {\n                  id: nanoid(),\n                  role: 'system',\n                  content: `[User has selected an invalid amount]`\n                }\n              ]\n            })\n\n            return <BotMessage content={'Invalid amount'} />\n          } else {\n            aiState.done({\n              ...aiState.get(),\n              messages: [\n                ...aiState.get().messages,\n                {\n                  id: nanoid(),\n                  role: 'assistant',\n                  content: [\n                    {\n                      type: 'tool-call',\n                      toolName: 'showStockPurchase',\n                      toolCallId,\n                      args: { symbol, price, numberOfShares }\n                    }\n                  ]\n                },\n                {\n                  id: nanoid(),\n                  role: 'tool',\n                  content: [\n                    {\n                      type: 'tool-result',\n                      toolName: 'showStockPurchase',\n                      toolCallId,\n                      result: {\n                        symbol,\n                        price,\n                        numberOfShares\n                      }\n                    }\n                  ]\n                }\n              ]\n            })\n\n            return (\n              <BotCard>\n                <Purchase\n                  props={{\n                    numberOfShares,\n                    symbol,\n                    price: +price,\n                    status: 'requires_action'\n                  }}\n                />\n              </BotCard>\n            )\n          }\n        }\n      },\n      getEvents: {\n        description:\n          'List funny imaginary events between user highlighted dates that describe stock activity.',\n        parameters: z.object({\n          events: z.array(\n            z.object({\n              date: z\n                .string()\n                .describe('The date of the event, in ISO-8601 format'),\n              headline: z.string().describe('The headline of the event'),\n              description: z.string().describe('The description of the event')\n            })\n          )\n        }),\n        generate: async function* ({ events }) {\n          yield (\n            <BotCard>\n              <EventsSkeleton />\n            </BotCard>\n          )\n\n          await sleep(1000)\n\n          const toolCallId = nanoid()\n\n          aiState.done({\n            ...aiState.get(),\n            messages: [\n              ...aiState.get().messages,\n              {\n                id: nanoid(),\n                role: 'assistant',\n                content: [\n                  {\n                    type: 'tool-call',\n                    toolName: 'getEvents',\n                    toolCallId,\n                    args: { events }\n                  }\n                ]\n              },\n              {\n                id: nanoid(),\n                role: 'tool',\n                content: [\n                  {\n                    type: 'tool-result',\n                    toolName: 'getEvents',\n                    toolCallId,\n                    result: events\n                  }\n                ]\n              }\n            ]\n          })\n\n          return (\n            <BotCard>\n              <Events props={events} />\n            </BotCard>\n          )\n        }\n      }\n    }\n  })\n\n  return {\n    id: nanoid(),\n    display: result.value\n  }\n}\n\nexport type AIState = {\n  chatId: string\n  messages: Message[]\n}\n\nexport type UIState = {\n  id: string\n  display: React.ReactNode\n}[]\n\nexport const AI = createAI<AIState, UIState>({\n  actions: {\n    submitUserMessage,\n    confirmPurchase\n  },\n  initialUIState: [],\n  initialAIState: { chatId: nanoid(), messages: [] },\n  onGetUIState: async () => {\n    'use server'\n\n    const session = await auth()\n\n    if (session && session.user) {\n      const aiState = getAIState() as Chat\n\n      if (aiState) {\n        const uiState = getUIStateFromAIState(aiState)\n        return uiState\n      }\n    } else {\n      return\n    }\n  },\n  onSetAIState: async ({ state }) => {\n    'use server'\n\n    const session = await auth()\n\n    if (session && session.user) {\n      const { chatId, messages } = state\n\n      const createdAt = new Date()\n      const userId = session.user.id as string\n      const path = `/chat/${chatId}`\n\n      const firstMessageContent = messages[0].content as string\n      const title = firstMessageContent.substring(0, 100)\n\n      const chat: Chat = {\n        id: chatId,\n        title,\n        userId,\n        createdAt,\n        messages,\n        path\n      }\n\n      await saveChat(chat)\n    } else {\n      return\n    }\n  }\n})\n\nexport const getUIStateFromAIState = (aiState: Chat) => {\n  return aiState.messages\n    .filter(message => message.role !== 'system')\n    .map((message, index) => ({\n      id: `${aiState.chatId}-${index}`,\n      display:\n        message.role === 'tool' ? (\n          message.content.map(tool => {\n            return tool.toolName === 'listStocks' ? (\n              <BotCard>\n                {/* TODO: Infer types based on the tool result*/}\n                {/* @ts-expect-error */}\n                <Stocks props={tool.result} />\n              </BotCard>\n            ) : tool.toolName === 'showStockPrice' ? (\n              <BotCard>\n                {/* @ts-expect-error */}\n                <Stock props={tool.result} />\n              </BotCard>\n            ) : tool.toolName === 'showStockPurchase' ? (\n              <BotCard>\n                {/* @ts-expect-error */}\n                <Purchase props={tool.result} />\n              </BotCard>\n            ) : tool.toolName === 'getEvents' ? (\n              <BotCard>\n                {/* @ts-expect-error */}\n                <Events props={tool.result} />\n              </BotCard>\n            ) : null\n          })\n        ) : message.role === 'user' ? (\n          <UserMessage>{message.content as string}</UserMessage>\n        ) : message.role === 'assistant' &&\n          typeof message.content === 'string' ? (\n          <BotMessage content={message.content} />\n        ) : null\n    }))\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2740, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2745, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/(chat)/chat/[id]/page.tsx"],"sourcesContent":["import { type Metadata } from 'next'\nimport { notFound, redirect } from 'next/navigation'\n\nimport { auth } from '@/auth'\nimport { getChat, getMissingKeys } from '@/app/actions'\nimport { Chat } from '@/components/chat'\nimport { AI } from '@/lib/chat/actions'\nimport { Session } from '@/lib/types'\n\nexport interface ChatPageProps {\n  params: {\n    id: string\n  }\n}\n\nexport async function generateMetadata({\n  params\n}: ChatPageProps): Promise<Metadata> {\n  const session = await auth()\n\n  if (!session?.user) {\n    return {}\n  }\n\n  const chat = await getChat(params.id, session.user.id)\n\n  if (!chat || 'error' in chat) {\n    redirect('/')\n  } else {\n    return {\n      title: chat?.title.toString().slice(0, 50) ?? 'Chat'\n    }\n  }\n}\n\nexport default async function ChatPage({ params }: ChatPageProps) {\n  const session = (await auth()) as Session\n  const missingKeys = await getMissingKeys()\n\n  if (!session?.user) {\n    redirect(`/login?next=/chat/${params.id}`)\n  }\n\n  const userId = session.user.id as string\n  const chat = await getChat(params.id, userId)\n\n  if (!chat || 'error' in chat) {\n    redirect('/')\n  } else {\n    if (chat?.userId !== session?.user?.id) {\n      notFound()\n    }\n\n    return (\n      <AI initialAIState={{ chatId: chat.id, messages: chat.messages }}>\n        <Chat\n          id={chat.id}\n          session={session}\n          initialMessages={chat.messages}\n          missingKeys={missingKeys}\n        />\n      </AI>\n    )\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAeO,eAAe,iBAAiB,EACrC,MAAM,EACQ;IACd,MAAM,UAAU,MAAM,CAAA,GAAA,oGAAA,CAAA,OAAI,AAAD;IAEzB,IAAI,CAAC,SAAS,MAAM;QAClB,OAAO,CAAC;IACV;IAEA,MAAM,OAAO,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAO,AAAD,EAAE,OAAO,EAAE,EAAE,QAAQ,IAAI,CAAC,EAAE;IAErD,IAAI,CAAC,QAAQ,WAAW,MAAM;QAC5B,CAAA,GAAA,0RAAA,CAAA,WAAQ,AAAD,EAAE;IACX,OAAO;QACL,OAAO;YACL,OAAO,MAAM,MAAM,WAAW,MAAM,GAAG,OAAO;QAChD;IACF;AACF;AAEe,eAAe,SAAS,EAAE,MAAM,EAAiB;IAC9D,MAAM,UAAW,MAAM,CAAA,GAAA,oGAAA,CAAA,OAAI,AAAD;IAC1B,MAAM,cAAc,MAAM,CAAA,GAAA,8GAAA,CAAA,iBAAc,AAAD;IAEvC,IAAI,CAAC,SAAS,MAAM;QAClB,CAAA,GAAA,0RAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,kBAAkB,EAAE,OAAO,EAAE,CAAC,CAAC;IAC3C;IAEA,MAAM,SAAS,QAAQ,IAAI,CAAC,EAAE;IAC9B,MAAM,OAAO,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAO,AAAD,EAAE,OAAO,EAAE,EAAE;IAEtC,IAAI,CAAC,QAAQ,WAAW,MAAM;QAC5B,CAAA,GAAA,0RAAA,CAAA,WAAQ,AAAD,EAAE;IACX,OAAO;QACL,IAAI,MAAM,WAAW,SAAS,MAAM,IAAI;YACtC,CAAA,GAAA,0RAAA,CAAA,WAAQ,AAAD;QACT;QAEA,qBACE,6VAAC,uHAAA,CAAA,KAAE;YAAC,gBAAgB;gBAAE,QAAQ,KAAK,EAAE;gBAAE,UAAU,KAAK,QAAQ;YAAC;sBAC7D,cAAA,6VAAC,mHAAA,CAAA,OAAI;gBACH,IAAI,KAAK,EAAE;gBACX,SAAS;gBACT,iBAAiB,KAAK,QAAQ;gBAC9B,aAAa;;;;;;;;;;;IAIrB;AACF"}},
    {"offset": {"line": 2813, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2829, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/twitter-image.png.mjs (structured image object)"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 1686, height: 882 }\n"],"names":[],"mappings":";;;;;;uCACe;IAAE,KAAA,oHAAA,CAAA,UAAG;IAAE,OAAO;IAAM,QAAQ;AAAI"}},
    {"offset": {"line": 2840, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2849, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/opengraph-image.png.mjs (structured image object)"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 1686, height: 882 }\n"],"names":[],"mappings":";;;;;;uCACe;IAAE,KAAA,sHAAA,CAAA,UAAG;IAAE,OAAO;IAAM,QAAQ;AAAI"}},
    {"offset": {"line": 2860, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}